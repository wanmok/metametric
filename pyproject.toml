[tool.ruff]
line-length = 119
src = ["src", "tests"]

select = [
    "E", # pycodestyle
    "F", # pyflakes
    "UP", # pyupgrade
    "D", # pydocstyle
]
ignore = [
    "D107", # Missing docstring in `__init__`
]

fixable = ["ALL"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
lines-after-imports = 2

[tool.black]
line-length = 119

[tool.pyright]
include = ["src", "tests"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]

[tool.poetry]
name = "autometric"
version = "0.1.0"
description = "A Unified View of Evaluation Metrics for Information Extraction"
authors = ["Tongfei Chen <tongfei@pm.me>", "Yunmo Chen <yunmo@jhu.edu>"]
readme = "README.md"
packages = [
    { include = "autometric", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
scipy = "^1.11.2"
numpy = "^1.25.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
pyright = "^1.1.327"
ruff = "^0.0.290"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
